{"ast":null,"code":"var _jsxFileName = \"/Users/mattcuan/full_stack/react/tic_tac_toe/src/components/Board.js\";\nimport Square from \"./Square.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  let {\n    xIsNext,\n    squares,\n    onPlay,\n    winningSquares,\n    gameOver\n  } = _ref;\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner[0];\n  } else if (!gameOver) {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  } else {\n    status = \"It's a draw!\";\n  }\n  function createGrid() {\n    let grid = [];\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n      for (let j = 0; j < 3; j++) {\n        const squareIndex = j * 3 + i;\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[squareIndex],\n          onSquareClick: () => handleClick(squareIndex),\n          onDraw: gameOver && !winner,\n          isWinningSquare: winningSquares && winningSquares.includes(squareIndex)\n        }, squareIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this));\n      }\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this));\n    }\n    return grid;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: createGrid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], a, b, c];\n    }\n  }\n  return null;\n}\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","Board","xIsNext","squares","onPlay","winningSquares","gameOver","handleClick","i","calculateWinner","nextSquares","slice","winner","status","createGrid","grid","row","j","squareIndex","push","includes","lines","length","a","b","c"],"sources":["/Users/mattcuan/full_stack/react/tic_tac_toe/src/components/Board.js"],"sourcesContent":["import Square from \"./Square.js\";\n\nexport default function Board({ xIsNext, squares, onPlay, winningSquares, gameOver }) {\n    function handleClick(i) {\n      if (squares[i] || calculateWinner(squares)) {\n        return\n      }\n      const nextSquares = squares.slice();\n      if (xIsNext) {\n        nextSquares[i] = \"X\";\n      } else {\n        nextSquares[i] = \"O\";\n      }\n      onPlay(nextSquares);\n    }\n  \n    const winner = calculateWinner(squares);\n    let status;    \n    if (winner) {\n      status = \"Winner: \" + winner[0];\n    }  else if (!gameOver) {\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n    } else {\n      status = \"It's a draw!\"\n    }\n  \n    function createGrid() {\n      let grid = [];\n      for (let i = 0; i < 3; i++) {\n        let row = [];\n        for (let j = 0; j < 3; j++) {\n          const squareIndex = (j * 3) + i;\n          row.push(\n          <Square \n            key={squareIndex}\n            value={squares[squareIndex]} \n            onSquareClick={() => handleClick(squareIndex)} \n            onDraw={gameOver && !winner}\n            isWinningSquare={winningSquares && winningSquares.includes(squareIndex)}/>\n          ); \n        }\n        grid.push(<div className=\"board-row\">{row}</div>);\n      }\n      return grid;\n    }\n    \n    return (\n      <>\n        <div className=\"status\">{status}</div>\n        <div className=\"grid\">{createGrid()}</div>\n      </>\n    );\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return [squares[a], a, b, c];\n      }\n    }\n    return null;\n  \n  }"],"mappings":";AAAA,OAAOA,MAAM,MAAM,aAAa;AAAC;AAAA;AAEjC,eAAe,SAASC,KAAK,OAAyD;EAAA,IAAxD;IAAEC,OAAO;IAAEC,OAAO;IAAEC,MAAM;IAAEC,cAAc;IAAEC;EAAS,CAAC;EAChF,SAASC,WAAW,CAACC,CAAC,EAAE;IACtB,IAAIL,OAAO,CAACK,CAAC,CAAC,IAAIC,eAAe,CAACN,OAAO,CAAC,EAAE;MAC1C;IACF;IACA,MAAMO,WAAW,GAAGP,OAAO,CAACQ,KAAK,EAAE;IACnC,IAAIT,OAAO,EAAE;MACXQ,WAAW,CAACF,CAAC,CAAC,GAAG,GAAG;IACtB,CAAC,MAAM;MACLE,WAAW,CAACF,CAAC,CAAC,GAAG,GAAG;IACtB;IACAJ,MAAM,CAACM,WAAW,CAAC;EACrB;EAEA,MAAME,MAAM,GAAGH,eAAe,CAACN,OAAO,CAAC;EACvC,IAAIU,MAAM;EACV,IAAID,MAAM,EAAE;IACVC,MAAM,GAAG,UAAU,GAAGD,MAAM,CAAC,CAAC,CAAC;EACjC,CAAC,MAAO,IAAI,CAACN,QAAQ,EAAE;IACrBO,MAAM,GAAG,eAAe,IAAIX,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;EAClD,CAAC,MAAM;IACLW,MAAM,GAAG,cAAc;EACzB;EAEA,SAASC,UAAU,GAAG;IACpB,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIQ,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,WAAW,GAAID,CAAC,GAAG,CAAC,GAAIT,CAAC;QAC/BQ,GAAG,CAACG,IAAI,eACR,QAAC,MAAM;UAEL,KAAK,EAAEhB,OAAO,CAACe,WAAW,CAAE;UAC5B,aAAa,EAAE,MAAMX,WAAW,CAACW,WAAW,CAAE;UAC9C,MAAM,EAAEZ,QAAQ,IAAI,CAACM,MAAO;UAC5B,eAAe,EAAEP,cAAc,IAAIA,cAAc,CAACe,QAAQ,CAACF,WAAW;QAAE,GAJnEA,WAAW;UAAA;UAAA;UAAA;QAAA,QAI0D,CAC3E;MACH;MACAH,IAAI,CAACI,IAAI,eAAC;QAAK,SAAS,EAAC,WAAW;QAAA,UAAEH;MAAG;QAAA;QAAA;QAAA;MAAA,QAAO,CAAC;IACnD;IACA,OAAOD,IAAI;EACb;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,UAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAO,eACtC;MAAK,SAAS,EAAC,MAAM;MAAA,UAAEC,UAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA,gBACzC;AAEP;AAAC,KAlDqBb,KAAK;AAoD3B,SAASQ,eAAe,CAACN,OAAO,EAAE;EAChC,MAAMkB,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,KAAK,CAACC,MAAM,EAAEd,CAAC,EAAE,EAAE;IACrC,MAAM,CAACe,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK,CAACb,CAAC,CAAC;IAC1B,IAAIL,OAAO,CAACoB,CAAC,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAAC,KAAKpB,OAAO,CAACqB,CAAC,CAAC,IAAIrB,OAAO,CAACoB,CAAC,CAAC,KAAKpB,OAAO,CAACsB,CAAC,CAAC,EAAE;MACxE,OAAO,CAACtB,OAAO,CAACoB,CAAC,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;IAC9B;EACF;EACA,OAAO,IAAI;AAEb;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}