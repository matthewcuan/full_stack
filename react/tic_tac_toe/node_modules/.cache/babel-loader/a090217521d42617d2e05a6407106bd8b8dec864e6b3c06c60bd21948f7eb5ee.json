{"ast":null,"code":"var _jsxFileName = \"/Users/mattcuan/full_stack/react/tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    value,\n    onSquareClick,\n    isWinningSquare,\n    onDraw\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinningSquare ? \"winning-square\" : \"\"} ${onDraw ? \"draw\" : \"\"}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n// {!gameOver ? \"\": (isWinningSquare ? \"winning-square\": \n_c = Square;\nfunction Board(_ref2) {\n  let {\n    xIsNext,\n    squares,\n    onPlay,\n    winningSquares\n  } = _ref2;\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner[0];\n  } else if (!squares[8]) {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  } else {\n    status = \"It's a draw!\";\n  }\n  function createGrid() {\n    let grid = [];\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n      for (let j = 0; j < 3; j++) {\n        const squareIndex = j * 3 + i;\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[squareIndex],\n          onSquareClick: () => handleClick(squareIndex),\n          gameOver: squares[8],\n          isWinningSquare: winningSquares && winningSquares.includes(squareIndex)\n        }, squareIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this));\n      }\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this));\n    }\n    return grid;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: createGrid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  const winner = calculateWinner(currentSquares);\n  const winningSquares = winner ? winner.slice(1) : null;\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    if (move !== currentMove) {\n      let description;\n      move > 0 ? description = 'Go to move #' + move : description = 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"You are at move #\", currentMove, \".\"]\n      }, move, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningSquares: winningSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        start: \"0\",\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], a, b, c];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","Square","value","onSquareClick","isWinningSquare","onDraw","Board","xIsNext","squares","onPlay","winningSquares","handleClick","i","calculateWinner","nextSquares","slice","winner","status","createGrid","grid","row","j","squareIndex","push","includes","Game","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","lines","a","b","c"],"sources":["/Users/mattcuan/full_stack/react/tic_tac_toe/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\n\nfunction Square({ value, onSquareClick, isWinningSquare, onDraw }) {\n  return (\n    <button className={`square ${isWinningSquare ? \"winning-square\": \"\"} ${onDraw ? \"draw\": \"\"}`} \n    onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// {!gameOver ? \"\": (isWinningSquare ? \"winning-square\": \n\nfunction Board({ xIsNext, squares, onPlay, winningSquares }) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;    \n  if (winner) {\n    status = \"Winner: \" + winner[0];\n  }  else if (!squares[8]) {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  } else {\n    status = \"It's a draw!\"\n  }\n\n  function createGrid() {\n    let grid = [];\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n      for (let j = 0; j < 3; j++) {\n        const squareIndex = (j * 3) + i;\n        row.push(\n        <Square \n          key={squareIndex}\n          value={squares[squareIndex]} \n          onSquareClick={() => handleClick(squareIndex)} \n          gameOver={squares[8]}\n          isWinningSquare={winningSquares && winningSquares.includes(squareIndex)}/>\n        ); \n      }\n      grid.push(<div className=\"board-row\">{row}</div>);\n    }\n    return grid;\n  }\n  \n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"grid\">{createGrid()}</div>\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  const winner = calculateWinner(currentSquares);\n  const winningSquares = winner ? winner.slice(1) : null;\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    if (move !== currentMove) {\n      let description;\n      (move > 0) ? description = 'Go to move #' + move: \n        description = 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n      );\n    } else {\n      return (\n        <li key={move}>\n        You are at move #{currentMove}.\n      </li>\n      )\n      } \n  })\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board \n          xIsNext={xIsNext} \n          squares={currentSquares} \n          onPlay={handlePlay} \n          winningSquares={winningSquares}\n          />\n      </div>\n      <div className=\"game-info\">\n        <ol start=\"0\">{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], a, b, c];\n    }\n  }\n  return null;\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}